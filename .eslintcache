[{"E:\\homework\\shop5\\src\\models\\products.js":"1","E:\\homework\\shop5\\src\\components\\Cart\\Cart.js":"2","E:\\homework\\shop5\\src\\App.js":"3","E:\\homework\\shop5\\src\\assets\\Font.js":"4","E:\\homework\\shop5\\src\\components\\Show\\Show.js":"5","E:\\homework\\shop5\\src\\components\\Chioce\\Chioce.js":"6","E:\\homework\\shop5\\src\\models\\cart.js":"7","E:\\homework\\shop5\\src\\api\\index.js":"8"},{"size":10055,"mtime":1608773720490,"results":"9","hashOfConfig":"10"},{"size":6213,"mtime":1608522536474,"results":"11","hashOfConfig":"10"},{"size":501,"mtime":1608367929600,"results":"12","hashOfConfig":"10"},{"size":223,"mtime":1608361784054,"results":"13","hashOfConfig":"10"},{"size":4749,"mtime":1608773305861,"results":"14","hashOfConfig":"10"},{"size":1419,"mtime":1608390036859,"results":"15","hashOfConfig":"10"},{"size":4042,"mtime":1608514066387,"results":"16","hashOfConfig":"10"},{"size":148,"mtime":1608176650613,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d9cs4w",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\homework\\shop5\\src\\models\\products.js",[],"E:\\homework\\shop5\\src\\components\\Cart\\Cart.js",["36"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, Button, List, Row, Col, Badge, Image } from \"antd\";\r\nimport { connect } from \"dva\";\r\nimport MyIcon from \"../../assets/Font\";\r\nimport \"./cart.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst Cart = ({ data, dispatch }) => {\r\n  useEffect(() => {\r\n    if (window.localStorage.cart_data) {\r\n      dispatch({\r\n        type: \"cart/updateCart\",\r\n      });\r\n    }\r\n  }, []);\r\n  const [visible, serVisible] = useState(0);\r\n  const total = data\r\n    .reduce((total, item) => {\r\n      return total + item.quantity * item.product.price;\r\n    }, 0)\r\n    .toFixed(2);\r\n  const count = data.reduce((total, item) => {\r\n    return total + item.quantity;\r\n  }, 0);\r\n  function getWidth() {\r\n    let cart_width = 0;\r\n    let w = document.documentElement.clientWidth;\r\n    if (w > 1300) {\r\n      cart_width = 30;\r\n    } else if (w <= 1300 && w > 1000) {\r\n      cart_width = 40;\r\n    } else if (w <= 1000 && w > 700) {\r\n      cart_width = 60;\r\n    } else if (w <= 700 && w > 600) {\r\n      cart_width = 70;\r\n    } else if (w <= 600) {\r\n      cart_width = 100;\r\n    }\r\n    return cart_width;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"small_cart\">\r\n        <MyIcon\r\n          type=\"icon-gouwuche\"\r\n          onClick={() => {\r\n            serVisible(1);\r\n          }}\r\n        />\r\n        <Badge count={count} className=\"head-example\"></Badge>\r\n      </div>\r\n\r\n      <div>\r\n        <Drawer\r\n          title={\r\n            <div className=\"inside-cart\">\r\n              <div className=\"content-title\">\r\n                <MyIcon type=\"icon-gouwuche1\" />\r\n                <Badge count={count} className=\"badge-inside\"></Badge>\r\n                <span className=\"cart-title\">Cart</span>\r\n              </div>\r\n            </div>\r\n          }\r\n          footer={\r\n            <div>\r\n              <div className=\"total\">\r\n                <Row>\r\n                  <Col span={12}>总价</Col>\r\n                  <Col span={12}>${total}</Col>\r\n                </Row>\r\n              </div>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginTop: \"20px\" }}\r\n                block\r\n                onClick={() => {\r\n                  dispatch({\r\n                    type: \"cart/clearCar\",\r\n                    payload: {\r\n                      cart_quantity: data,\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                清空购物车\r\n              </Button>\r\n            </div>\r\n          }\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={() => {\r\n            serVisible(0);\r\n          }}\r\n          visible={visible}\r\n          width={`${getWidth()}%`}\r\n        >\r\n          <List\r\n            bordered\r\n            dataSource={data}\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            renderItem={(item, index) => (\r\n              <List.Item key={item.sku}>\r\n                <Row gutter={[10, 0]}>\r\n                  <Col span={8}>\r\n                    <Image\r\n                      src={`./img/${item.product.sku}_2.jpg`}\r\n                      alt=\"裂开\"\r\n                      className=\"imgs\"\r\n                    />\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <p>{item.product.title}</p>\r\n                    <div className=\"cart-good-name\">\r\n                      <span>\r\n                        {item.size} | {item.product.style}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"cart-quantity\">Quantity:{item.quantity}</p>\r\n                  </Col>\r\n                  <Col span={8} className=\"cart_right\">\r\n                    <Button\r\n                      className=\"exit\"\r\n                      onClick={(index) => {\r\n                        dispatch({\r\n                          type: \"cart/deleteItem\",\r\n                          payload: {\r\n                            delete_id: item.product_id,\r\n                            size: item.size,\r\n                            index: index,\r\n                            quantity: item.quantity,\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      ×\r\n                    </Button>\r\n                    <div className=\"cart-good-price-box\">\r\n                      <p className=\"cart-good-price\">\r\n                        {item.product.currencyFormat}\r\n                        {item.product.price}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        disabled={item.quantity === 1}\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: \"cart/decrease\",\r\n                            payload: {\r\n                              id: item.product_id,\r\n                              Csize: item.size,\r\n                            },\r\n                          });\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      &nbsp;\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: \"cart/increase\",\r\n                            payload: {\r\n                              id: item.product_id,\r\n                              remainder: item.product.installments > 0 ? 1 : 0,\r\n                              Csize: item.size,\r\n                            },\r\n                          });\r\n                        }}\r\n                        size=\"small\"\r\n                        \r\n                      >\r\n                        +\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.cart.data,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","E:\\homework\\shop5\\src\\App.js",[],["37","38"],"E:\\homework\\shop5\\src\\assets\\Font.js",[],"E:\\homework\\shop5\\src\\components\\Show\\Show.js",["39"],"E:\\homework\\shop5\\src\\components\\Chioce\\Chioce.js",[],"E:\\homework\\shop5\\src\\models\\cart.js",[],"E:\\homework\\shop5\\src\\api\\index.js",[],{"ruleId":"40","severity":1,"message":"41","line":15,"column":6,"nodeType":"42","endLine":15,"endColumn":8,"suggestions":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"40","severity":1,"message":"41","line":33,"column":6,"nodeType":"42","endLine":33,"endColumn":8,"suggestions":"48"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["49"],"no-native-reassign",["50"],"no-negated-in-lhs",["51"],["52"],{"desc":"53","fix":"54"},"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"55"},"Update the dependencies array to be: [dispatch]",{"range":"56","text":"57"},{"range":"58","text":"57"},[428,430],"[dispatch]",[617,619]]